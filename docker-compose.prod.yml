version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: codium-postgres-prod
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - codium-network-prod
    restart: always

  redis:
    image: redis:7-alpine
    container_name: codium-redis-prod
    volumes:
      - redis_data_prod:/data
    networks:
      - codium-network-prod
    restart: always

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: codium-api-prod
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    ports:
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - redis
    networks:
      - codium-network-prod
    restart: always

networks:
  codium-network-prod:
    driver: bridge

volumes:
  postgres_data_prod:
  redis_data_prod:
