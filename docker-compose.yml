services:
  postgres:
    image: postgres:16-alpine
    container_name: codium-postgres
    environment:
      POSTGRES_USER: codium
      POSTGRES_PASSWORD: codium_password
      POSTGRES_DB: codium_db
    ports: ["5432:5432"]
    volumes: ["postgres_data:/var/lib/postgresql/data"]
    networks: ["codium-network"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codium"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: codium-redis
    ports: ["6379:6379"]
    volumes: ["redis_data:/data"]
    networks: ["codium-network"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: ./.env
    container_name: codium-api
    ports: ["3000:3000"]
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks: ["codium-network"]
    restart: unless-stopped
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npx prisma db seed && npm run start:dev"

  worker-python:
    build:
      context: ./workers/python-worker
      dockerfile: Dockerfile
    environment: { REDIS_HOST: redis, REDIS_PORT: 6379 }
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks: ["codium-network"]
    restart: unless-stopped

  worker-java:
    build:
      context: ./workers/java-worker
      dockerfile: Dockerfile
    environment: { REDIS_HOST: redis, REDIS_PORT: 6379 }
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks: ["codium-network"]
    restart: unless-stopped

  worker-nodejs:
    build:
      context: ./workers/nodejs-worker
      dockerfile: Dockerfile
    environment: { REDIS_HOST: redis, REDIS_PORT: 6379 }
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks: ["codium-network"]
    restart: unless-stopped

  worker-cpp:
    build:
      context: ./workers/cpp-worker
      dockerfile: Dockerfile
    environment: { REDIS_HOST: redis, REDIS_PORT: 6379 }
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks: ["codium-network"]
    restart: unless-stopped

networks:
  codium-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: